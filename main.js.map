{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["function createCard(cardData, cardHandlers, profileInfo) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardItem = cardTemplate.querySelector('.card').cloneNode(true);\n  const deleteButton = cardItem.querySelector('.card__delete-button');\n  const cardImage = cardItem.querySelector('.card__image');\n  const likeButton = cardItem.querySelector('.card__like-button');\n  const likeCounter =  cardItem.querySelector('.card__like-counter');\n\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  likeCounter.textContent = cardData.likes.length;\n  \n  if (cardData.likes.some((profile) => {\n    return profile['_id'] === profileInfo['_id']\n  })) {\n    likeButton.classList.add('card__like-button_is-active')\n  }\n\n  if (cardData.owner['_id'] === profileInfo['_id']) {\n    deleteButton.classList.add('card__delete-button_active');\n    deleteButton.addEventListener('click', () => {\n      const confirmDeleteModal = cardHandlers.onOpenConfirmDeleteModal()\n      const confirmButton = confirmDeleteModal.querySelector('.popup__button')\n      confirmButton.addEventListener('click', (evt) => {\n        cardHandlers.onDelete(cardData['_id'])\n        .then(()=> {\n          handleDeleteCardFromDOM(cardItem);\n          cardHandlers.onCloseModal(confirmDeleteModal);\n        })\n        .catch((err) => {\n          console.log(`Ошибка удаления карточки: ${err}`)\n        })\n      })\n      \n    });\n  }\n\n  likeButton.addEventListener('click', () => {\n    if (likeButton.classList.contains('card__like-button_is-active')) {\n      cardHandlers.onDeleteLike(cardData['_id'])\n        .then((res) => {\n          const likeCount = res.likes.length;\n          handleLikeCard(likeButton, likeCounter, likeCount)\n        })\n        .catch((err) => {\n          console.log(`Ошибка удаления лайка: ${err}`)\n        })\n    } else {\n      cardHandlers.onPutLike(cardData['_id'])\n        .then((res) => {\n          const likeCount = res.likes.length;\n          handleLikeCard(likeButton, likeCounter, likeCount)\n        })\n        .catch((err) => {\n          console.log(`Ошибка постановки лайка: ${err}`)\n        })\n    }\n  });\n\n  cardItem.querySelector('.card__title').textContent = cardData.name;\n\n  likeButton.addEventListener('click', cardHandlers.onLike);\n\n  cardImage.addEventListener('click', () => {\n    cardHandlers.onOpenModal(cardData.link, cardData.name);\n  });\n\n  return cardItem;\n}\n\nfunction handleDeleteCardFromDOM(card) {\n  card.remove();\n}\n\nfunction handleLikeCard(likeButton, likeCounter, count) {\n  likeButton.classList.toggle('card__like-button_is-active');\n  likeCounter.textContent = count;\n}\n\nexport { createCard };\n","function openModal(modal) {\r\n  modal.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', handleEscape);\r\n}\r\n\r\nfunction closeModal(modal) {\r\n  modal.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', handleEscape);\r\n}\r\n\r\nfunction handleEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openedModal = document.querySelector('.popup_is-opened');\r\n    closeModal(openedModal);\r\n  }\r\n}\r\n\r\nfunction setCloseModal(modals) {\r\n  modals.forEach((modal) => {\r\n    modal.addEventListener('mousedown', (evt) => {\r\n      const target = evt.target;\r\n      if (\r\n        target.classList.contains('popup_is-opened') ||\r\n        target.classList.contains('popup__close')\r\n      ) {\r\n        closeModal(modal);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport { openModal, closeModal, setCloseModal };\r\n","function showInputError(formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  inputElement.setCustomValidity('');\r\n  errorElement.textContent = '';\r\n}\r\n\r\nfunction checkInputIsValid(formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage)\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid\r\n  }) \r\n}\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.setAttribute('disabled', true);\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.removeAttribute('disabled');\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function() {\r\n      checkInputIsValid(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault()\r\n    })\r\n\r\n    setEventListeners(formElement, validationConfig)\r\n  })\r\n}\r\n\r\nexport function  clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n}\r\n","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-10',\r\n  headers: {\r\n    authorization: '38816a01-ce10-4ad5-a912-b35c9441eab8',\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nfunction checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n};\r\n\r\nexport function getProfileInfo() {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function editProfile(newName, newDescription) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newName,\r\n      about: newDescription,\r\n    }),\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function addCard(newName, newLink) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newName,\r\n      link: newLink,\r\n    }),\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function putCardLike(cardId) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function deleteCardLike(cardId) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function getCardLikeCount(cardId) {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'GET',\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function editProfileAvatar(link) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar `, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: link,\r\n    }),\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n}\r\n\r\nexport function dataLoading(button, isLoading) {\r\n  if (isLoading) {\r\n    button.textContent = 'Сохранение...';\r\n  } else {\r\n    button.textContent = 'Сохранить';\r\n  }\r\n}\r\n","import './pages/index.css';\nimport { createCard } from './scripts/cards';\nimport { openModal, closeModal, setCloseModal } from './scripts/modal';\nimport { enableValidation, clearValidation } from './scripts/validation';\nimport {\n  getProfileInfo,\n  getInitialCards,\n  editProfile,\n  addCard,\n  deleteCard,\n  putCardLike,\n  deleteCardLike,\n  editProfileAvatar,\n  dataLoading,\n} from './scripts/api';\n\nconst container = document.querySelector('.content');\nconst placesList = container.querySelector('.places__list');\nconst profileEditButton = container.querySelector('.profile__edit-button');\nconst profileAddButton = container.querySelector('.profile__add-button');\n\n// Модальное окно редактирования профиля\nconst profileEditModal = document.querySelector('.popup_type_edit');\n\n//Модальное окно добавления новой карточки\nconst newCardAddModal = document.querySelector('.popup_type_new-card');\n\n//Модальное окно изменения фото профиля\nconst profileAvatarEditModal = document.querySelector(\n  '.popup_type_edit-profile-avatar'\n);\n\n// форма редактирования профиля\nconst profileEditForm = document.forms['edit-profile'];\nconst profileNameInput = profileEditForm.querySelector(\n  '.popup__input_type_name'\n);\nconst profileJobInput = profileEditForm.querySelector(\n  '.popup__input_type_description'\n);\n\n//Форма редактирования аватара профиля\nconst profileAvatarEditForm = document.forms['new-avatar'];\nconst profileAvatarInput = profileAvatarEditForm.querySelector(\n  '.popup__input_type_url'\n);\n\n//массив попапов страницы\nconst modals = document.querySelectorAll('.popup');\n\n//Данные профиля\nconst profileTitle = container.querySelector('.profile__title');\nconst profileDescription = container.querySelector('.profile__description');\nconst profileImage = container.querySelector('.profile__image');\n\n// форма добавления новой карточки\nconst newCardForm = document.forms['new-place'];\nconst imageNameInput = newCardForm.querySelector(\n  '.popup__input_type_card-name'\n);\nconst imageUrlInput = newCardForm.querySelector('.popup__input_type_url');\n\n// Модальное окно увеличения картинки карточки\nconst fullImageModal = document.querySelector('.popup_type_image');\nconst fullImage = fullImageModal.querySelector('.popup__image');\nconst fullImageCaption = fullImageModal.querySelector('.popup__caption');\n\n// Модальное окно подтверждения удаления карточки\nconst condirmCardDeleteModal = document.querySelector(\n  '.popup_type_confirm-card-delete'\n);\n\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\n\nconst cardHandlers = {\n  onDelete: deleteCard,\n  onPutLike: putCardLike,\n  onDeleteLike: deleteCardLike,\n  onOpenModal: handleOpenImageModal,\n  onOpenConfirmDeleteModal: handleOpenConfirmCardDeleteModal,\n  onCloseModal: closeModal,\n};\n\nfunction handleEditFormSubmit(evt) {\n  evt.preventDefault();\n  dataLoading(evt.submitter, true);\n  const name = profileNameInput.value;\n  const job = profileJobInput.value;\n  editProfile(name, job)\n    .then((profileData) => {\n      profileTitle.textContent = profileData.name;\n      profileDescription.textContent = profileData.about;\n    })\n    .catch((err) => {\n      console.log(`Ошибка обновления данных профиля: ${err}`);\n    })\n    .finally(() => {\n      dataLoading(evt.submitter, false);\n    });\n\n  closeModal(profileEditModal);\n}\n\nfunction handleNewCardFormSubmit(evt) {\n  evt.preventDefault();\n  dataLoading(evt.submitter, true);\n  const form = evt.target;\n  const name = imageNameInput.value;\n  const link = imageUrlInput.value;\n  Promise.all([addCard(name, link), getProfileInfo()])\n    .then(([cardData, profileData]) => {\n      renderCard(cardData, profileData);\n    })\n    .catch((err) => {\n      console.log(`Ошибка добавления поста: ${err}`);\n    })\n    .finally(() => {\n      dataLoading(evt.submitter, false);\n    });\n  closeModal(newCardAddModal);\n  form.reset();\n}\n\nfunction handleEditProfileAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  dataLoading(evt.submitter, true);\n  const form = evt.target;\n  const link = profileAvatarInput.value;\n  editProfileAvatar(link)\n    .then((data) => {\n      profileImage.style.backgroundImage = `url('${data.avatar}')`;\n    })\n    .catch((err) => {\n      console.log(`Ошибка обновления аватара: ${err}`);\n    })\n    .finally(() => {\n      dataLoading(evt.submitter, false);\n    });\n  closeModal(profileAvatarEditModal);\n  form.reset();\n}\n\nfunction handleOpenImageModal(link, name) {\n  fullImage.src = link;\n  fullImage.alt = name;\n  fullImageCaption.textContent = name;\n  openModal(fullImageModal);\n}\n\nfunction handleOpenConfirmCardDeleteModal() {\n  openModal(condirmCardDeleteModal);\n  return condirmCardDeleteModal;\n}\n\nfunction renderCard(card, profileInfo, method = 'prepend') {\n  const cardElement = createCard(card, cardHandlers, profileInfo);\n  placesList[method](cardElement);\n}\n\nfunction renderCardsList(cards, profileInfo) {\n  cards.forEach((card) => {\n    renderCard(card, profileInfo, 'append');\n  });\n}\n\nprofileEditButton.addEventListener('click', () => {\n  openModal(profileEditModal);\n  profileNameInput.value = profileTitle.textContent;\n  profileJobInput.value = profileDescription.textContent;\n  clearValidation(profileEditForm, validationConfig);\n});\n\nprofileAddButton.addEventListener('click', () => {\n  imageNameInput.value = '';\n  imageUrlInput.value = '';\n  clearValidation(newCardForm, validationConfig);\n  openModal(newCardAddModal);\n});\n\nprofileImage.addEventListener('click', () => {\n  profileAvatarInput.value = '';\n  clearValidation(profileAvatarEditForm, validationConfig);\n  openModal(profileAvatarEditModal);\n});\n\nprofileEditForm.addEventListener('submit', handleEditFormSubmit);\n\nnewCardForm.addEventListener('submit', handleNewCardFormSubmit);\n\nprofileAvatarEditForm.addEventListener(\n  'submit',\n  handleEditProfileAvatarFormSubmit\n);\n\n//внутри функции навешиваем обработчик закрытия на все попапы на странице\nsetCloseModal(modals);\n\nenableValidation(validationConfig);\n\nPromise.all([getProfileInfo(), getInitialCards()])\n  .then(([profileData, initialCards]) => {\n    profileTitle.textContent = profileData.name;\n    profileDescription.textContent = profileData.about;\n    profileImage.style.backgroundImage = `url('${profileData.avatar}')`;\n    renderCardsList(initialCards, profileData);\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n"],"names":["handleLikeCard","likeButton","likeCounter","count","classList","toggle","textContent","openModal","modal","add","document","addEventListener","handleEscape","closeModal","remove","removeEventListener","evt","key","querySelector","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","removeAttribute","inactiveButtonClass","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","status","getProfileInfo","fetch","then","dataLoading","button","isLoading","container","placesList","profileEditButton","profileAddButton","profileEditModal","newCardAddModal","profileAvatarEditModal","profileEditForm","forms","profileNameInput","profileJobInput","profileAvatarEditForm","profileAvatarInput","modals","profileTitle","profileDescription","profileImage","newCardForm","imageNameInput","imageUrlInput","fullImageModal","fullImage","fullImageCaption","condirmCardDeleteModal","formSelector","cardHandlers","onDelete","cardId","method","onPutLike","onDeleteLike","onOpenModal","link","name","src","alt","onOpenConfirmDeleteModal","onCloseModal","renderCard","card","profileInfo","arguments","length","undefined","cardElement","cardData","cardItem","content","cloneNode","deleteButton","cardImage","likes","profile","owner","confirmDeleteModal","catch","err","console","log","contains","likeCount","onLike","createCard","value","newName","newDescription","preventDefault","submitter","body","JSON","stringify","about","profileData","finally","newLink","form","target","all","_ref","_ref2","_slicedToArray","reset","avatar","data","style","backgroundImage","setCloseModal","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputIsValid","setEventListeners","enableValidation","_ref3","_ref4","initialCards"],"sourceRoot":""}